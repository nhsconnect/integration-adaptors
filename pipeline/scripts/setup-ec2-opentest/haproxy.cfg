#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats



resolvers awsvpc
    # Note that this ip address is the same in all AWS VPCs
    # See https://stackoverflow.com/a/42315582 for more info
    # on this ip address.
    nameserver vpc 169.254.169.253:53

resolvers mydns
    parse-resolv-conf



#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    option                  dontlognull
    option                  http-server-close
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000
    default-server init-addr none # Don't fail on startup if domain names don't resolve.

#---------------------------------------------------------------------
# Accept inbound requests from Spine and forward to MHS inbound load
# balancer
#---------------------------------------------------------------------
frontend  spineinbound
    bind *:443
    mode tcp

    default_backend spineinboundbackend

backend spineinboundbackend
    server mhsinboundloadbalancer mhs-inbound-load-balancer-url:443 check resolvers awsvpc

#---------------------------------------------------------------------
# Accept outbound requests from MHS spine route lookup and forward to
# Spine Directory Service
#---------------------------------------------------------------------
frontend  ldapoutbound
    bind *:389
    mode tcp

    default_backend ldapoutboundbackend

backend ldapoutboundbackend
    server ldapoutboundendpoint msg.opentest.hscic.gov.uk:389 check resolvers mydns
