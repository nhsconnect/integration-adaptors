{
  "_description": "This packer file produces a inbound image and has the capability to publish to a given repository",
  "variables": {
    "app_dir": "/usr/src/app",
    "common_dir": "common",
    "outbound_dir": "mhs/outbound",
    "mhs_common_dir": "mhs/common",
    "repository": "{{env `DOCKER_REPOSITORY`}}",
    "tag": "{{env `BUILD_TAG`}}",
    "docker_registry_url": "{{env `DOCKER_REGISTRY_URL`}}"
  },
  "builders": [
    {
      "type": "docker",
      "image": "python:3-slim",
      "container_dir": "/packer-files",
      "commit": true,
      "changes": [
        "EXPOSE 80",
        "WORKDIR {{user `app_dir`}}/{{user `outbound_dir`}}",
        "ENTRYPOINT pipenv run start-outbound"
      ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "inline": [
        "apt-get update",
        "apt-get install build-essential -y",
        "mkdir -p {{user `app_dir`}}/mhs"
      ]
    },
    {
      "type": "file",
      "source": "{{user `common_dir`}}",
      "destination": "{{user `app_dir`}}"
    },
    {
      "type": "file",
      "source": "{{user `mhs_common_dir`}}",
      "destination": "{{user `app_dir`}}/{{user `mhs_common_dir`}}"
    },
    {
      "type": "file",
      "source": "{{user `outbound_dir`}}",
      "destination": "{{user `app_dir`}}/{{user `outbound_dir`}}"
    },
    {
      "type": "shell",
      "inline": [
        "sed -i 's/SECLEVEL=2/SECLEVEL=1/' /etc/ssl/openssl.cnf # Temporarily lower security to workaround opentest certs with SHA1 signatures"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "pip install pipenv",
        "cd {{user `app_dir`}}/{{user `outbound_dir`}}",
        "pipenv install --deploy --ignore-pipfile"
      ]
    }
  ],
  "post-processors": [
    [
      {
        "name": "publish",
        "type": "docker-tag",
        "repository": "{{user `repository`}}",
        "tag": "outbound-{{user `tag`}}"
      },
      {
        "name": "publish",
        "type": "docker-push",
        "ecr_login": true,
        "login_server": "{{user `docker_registry_url`}}"
      },
      {
        "type": "docker-tag",
        "repository": "local/mhs-outbound"
      }
    ]
  ]
}
