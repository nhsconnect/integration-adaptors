{
    "paths": {
        "/": {
            "post": {
                "summary": "Make a request to the MHS",
                "description": "Make a request to the MHS",
                "operationId": "postMHS",
                "parameters": [
                    {
                        "name": "Interaction-Id",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ID of the interaction that you want to invoke. e.g. QUPC_IN160101UK05"
                    },
                    {
                        "name": "sync-async",
                        "in": "header",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "true",
                                "false"
                            ]
                        },
                        "description": "If set to true and the interaction ID is for an async interaction that supports sync-async, then the HTTP response will be the response from Spine, and the response will not be put onto the inbound queue.\n\nIf set to false for an async interaction, then the response from Spine will be put onto the inbound queue and the HTTP response will just acknowledge sending the request successfully to Spine.\n\nFor sync interactions or async interactions that don't support sync-async, this header must be set to false."
                    },
                    {
                        "name": "from-asid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ASID of the sending system. This should be the same as the from-asid value within the HL7 payload. This header is optional and only required/used for interactions that use the sync workflow."
                    },
                    {
                        "name": "Message-Id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Message ID of the message to send to Spine. If not sent, the MHS generates a random message ID.\n\nWhen performing async requests where the response is put on the inbound queue, the message ID will be put with the response on the queue."
                    },
                    {
                        "name": "Correlation-Id",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Correlation ID that is used when logging. If not passed, a random correlation ID is generated. The idea is that log messages produced by the MHS include this correlation ID which allows correlating logs relating to a single request together. If the supplier system uses it's own correlation ID when producing it's logs, then that should be passed in here, so that logs for a single request can be tied together across the supplier system and the MHS.\n\nWhen performing async requests where the response is put on the inbound queue, the correlation ID will be put with the response on the queue.\n\nNote that this correlation ID gets sent to/from Spine."
                    },
                    {
                        "name": "ods-code",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "ODS Code receiving system. It defaults to Spines ODS Code if not porvided and is primarily used for indirect messaging, i.e. forward reliable for example, where the destination system is not Spine. The ODS Code is used to lookup the constract properties in SDS."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response from Spine.",
                        "content": {
                            "text/xml": {}
                        }
                    },
                    "202": {
                        "description": "Acknowledgement that we successfully sent the message to Spine (response will come asynchronously on the inbound queue)."
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/RequestBody"
                            }
                        }
                    },
                    "description": "The HL7 payload (and optional attachments) to be sent to Spine."
                }
            }
        },
        "/healthcheck": {
            "get": {
                "summary": "Healthcheck endpoint",
                "description": "This endpoint just returns a HTTP 200 response and does no further processing. This endpoint is intended to be used by load balancers/other infrastructure to check that the server is running.",
                "operationId": "getHealthcheck",
                "responses": {
                    "200": {
                        "description": "The only response this endpoint returns."
                    }
                }
            }
        }
    },
    "info": {
        "title": "MHS API docs",
        "version": "0.1"
    },
    "openapi": "3.0.2",
    "components": {
        "schemas": {
            "Attachment": {
                "type": "object",
                "properties": {
                    "is_base64": {
                        "type": "boolean",
                        "description": "Whether the attachment payload is base64-encoded or not. This is only required for binary attachments eg images."
                    },
                    "content_type": {
                        "type": "string",
                        "enum": [
                            "text/plain",
                            "text/html",
                            "application/pdf",
                            "text/xml",
                            "application/xml",
                            "text/rtf",
                            "audio/basic",
                            "audio/mpeg",
                            "image/png",
                            "image/gif",
                            "image/jpeg",
                            "image/tiff",
                            "video/mpeg",
                            "application/msword",
                            "application/octet-stream"
                        ],
                        "description": "Content type of the attachment"
                    },
                    "payload": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 5000000,
                        "description": "The attachment, possibly base64-encoded as per is_base64."
                    },
                    "description": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 100,
                        "description": "Description of the attachment"
                    }
                },
                "required": [
                    "content_type",
                    "description",
                    "is_base64",
                    "payload"
                ]
            },
            "RequestBody": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "default": [],
                        "maxItems": 98,
                        "description": "Optional attachments to send with the payload. Only for use for interactions that support sending attachments.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "payload": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 5000000,
                        "description": "HL7 Payload to send to Spine"
                    }
                },
                "required": [
                    "payload"
                ]
            }
        }
    }
}
