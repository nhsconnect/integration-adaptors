resource "aws_security_group_rule" "base_core_to_opentest_proxy" {
  count = var.opentest_connected ? 1 : 0
  security_group_id = aws_security_group.core_sg.id
  type = "egress"
  from_port = 3128
  to_port = 3128
  protocol = "tcp"
  source_security_group_id = var.opentest_sg_id
  description = "Allow proxy to Opentest"
  depends_on = [aws_vpc_peering_connection.opentest_peering[0]]
}

resource "aws_security_group_rule" "opentest_proxy_from_base_core" {
  count = var.opentest_connected ? 1 : 0
  source_security_group_id = aws_security_group.core_sg.id
  type = "ingress"
  from_port = 3128
  to_port = 3128
  protocol = "tcp"
  security_group_id = var.opentest_sg_id
  description = "Allow Opentest Proxy from ${var.environment} env"
  depends_on = [aws_vpc_peering_connection.opentest_peering[0]]
}

resource "aws_security_group_rule" "base_core_to_opentest_ldap" {
  count = var.opentest_connected ? 1 : 0
  security_group_id = aws_security_group.core_sg.id
  type = "egress"
  from_port = 389
  to_port = 389
  protocol = "tcp"
  source_security_group_id = var.opentest_sg_id
  description = "Allow LDAP to Opentest"
  depends_on = [aws_vpc_peering_connection.opentest_peering[0]]
}

resource "aws_security_group_rule" "opentest_ldap_from_base_core" {
  count = var.opentest_connected ? 1 : 0
  source_security_group_id = aws_security_group.core_sg.id
  type = "ingress"
  from_port = 389
  to_port = 389
  protocol = "tcp"
  security_group_id = var.opentest_sg_id
  description = "Allow Opentest LDAP from ${var.environment} env"
  depends_on = [aws_vpc_peering_connection.opentest_peering[0]]
}
